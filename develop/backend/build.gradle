plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.bump'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

//ext['log4j2.version'] = '2.17.0'

configurations {
//	configureEach {
//		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

	// SWAGGER
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// DB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// == 스프링 부트 3.0 이상 ==
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	//querydsl 추가 == 3.0 미만인 경우
	//	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	//	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// log4j2
//	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
//	implementation 'org.apache.logging.log4j:log4j-spring-boot'

	// log4j2 use yml config
//	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

	// log4j2 json template
//	runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json'

	// kafka
	//	implementation 'org.springframework.kafka:spring-kafka'
	// 	testImplementation 'org.springframework.kafka:spring-kafka-test'



	//	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named('test') {
	useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}