plugins {
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.bump'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext['log4j2.version'] = '2.17.0'

configurations {
	configureEach {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Swagger 3.0
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// utils
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.apache.logging.log4j:log4j-spring-boot'

	// log4j2 use yml config
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

	// log4j2 json template
	runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json'

	// password validator
	implementation 'org.passay:passay:1.6.2'

	// Maria DB jdbc
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.3'

	// http client 5 (apache)
//	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

	// webclient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.3'
}

def querydslSrcDir = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}

compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(file(querydslSrcDir))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ querydslSrcDir ]
}

clean {
	delete file(querydslSrcDir)
}
